// Code generated by "stringer -type=K8sResourceType -linecomment"; DO NOT EDIT.

package registry

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KRTUnknown-0]
	_ = x[KRTDeployment-1]
	_ = x[KRTStatefulSet-2]
	_ = x[KRTDaemonSet-3]
	_ = x[KRTMonitorCrdKafka-4]
	_ = x[KRTMonitorCrdMysql-5]
	_ = x[KRTMonitorCrdRedis-6]
	_ = x[KRTMonitorCrdZookeeper-7]
	_ = x[KRTWellcloudCms-8]
	_ = x[KRTClusterRole-9]
	_ = x[KRTClusterRoleBinding-10]
	_ = x[KRTServiceAccount-11]
	_ = x[KRTService-12]
	_ = x[KRTConfigMap-13]
	_ = x[KRTPod-14]
	_ = x[KrtReplicaSet-15]
	_ = x[KRTMonitorCrdRabbitMQ-16]
	_ = x[KRTJob-17]
	_ = x[KRTCronJob-18]
}

const _K8sResourceType_name = "unknownDeploymentStatefulSetDaemonSetMonitorKafkaMonitorMysqlMonitorRedisMonitorZookeeperWellcloudCmsClusterRoleClusterRoleBindingServiceAccountServiceConfigMapPodReplicaSetRabbitMQJobCronJob"

var _K8sResourceType_index = [...]uint8{0, 7, 17, 28, 37, 49, 61, 73, 89, 101, 112, 130, 144, 151, 160, 163, 173, 181, 184, 191}

func (i K8sResourceType) String() string {
	if i < 0 || i >= K8sResourceType(len(_K8sResourceType_index)-1) {
		return "K8sResourceType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _K8sResourceType_name[_K8sResourceType_index[i]:_K8sResourceType_index[i+1]]
}
